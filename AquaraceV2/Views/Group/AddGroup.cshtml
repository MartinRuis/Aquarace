@model AquaraceV2.ViewModel.CreateGroupViewModel

@{
    ViewBag.Title = "AddGroup";
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                @Html.ActionLink("Aquarace", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })

            </div>
            <ul class="nav navbar-nav navbar-right">
                <li><a href="#"><span class="glyphicon glyphicon-user"></span> Welcome @HttpContext.Current.Session["UserName"].ToString()</a></li>
                <li>@Html.ActionLink("Logout", "Login", "Player")</li>
            </ul>
        </div>
    </div>
    <br/>
    <div class="container">
        <div class="row">
            <div class="col col-md-12">
                <div class="jumbotron">
                    
                    
                    <div class="form-horizontal">
                        <h2>Create group</h2>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="control-label col-md-2">make group private?</label>
                            <div class="col-md-10">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.IsPrivate)
                                    @Html.ValidationMessageFor(model => model.IsPrivate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create group" class="btn btn-success btn-xl" />
                            </div>
                        </div>
                    </div>
                    

                </div>
            </div>
        </div>
    </div>

    
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
