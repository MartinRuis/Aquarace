@model AquaraceV2.Models.DriverGuess

@{
    ViewBag.Title = "MakeGuess";
}
<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
</head>

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            @Html.ActionLink("Aquarace", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })

        </div>
        <ul class="nav navbar-nav navbar-right">
            <li><a href="#"><span class="glyphicon glyphicon-user"></span> Welcome @HttpContext.Current.Session["UserName"].ToString()</a></li>
            <li>@Html.ActionLink("Logout", "Login", "Player")</li>
        </ul>
    </div>
</div>


<br/>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    

    <div class="container">
        <div class="row">
            <div class="col col-md-4">
                <div class="jumbotron" style="height: 200px;">
                    <h2>Cash spent</h2>

                    <p id ="Cash" style="display: inline-block">0</p>
                    <p style="display: inline-block"> / </p>
                    <p style="display: inline-block"> 40000000</p>

                    
                </div>
            </div>
            <div class="col col-md-4">
                <div class="jumbotron" style="height: 900px; padding: 0px;">
                    <br />
                    <h2>&nbsp; Select drivers (max x)</h2>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block; width: 100px;">HAM (7M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver1)
                            @Html.ValidationMessageFor(model => model.Driver1, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block; width: 100px;">BOT (6M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver2)
                            @Html.ValidationMessageFor(model => model.Driver2, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block; width: 100px;">VET (7M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver3)
                            @Html.ValidationMessageFor(model => model.Driver3, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">RAI (6M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver4)
                            @Html.ValidationMessageFor(model => model.Driver4, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">VER (6M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver5)
                            @Html.ValidationMessageFor(model => model.Driver5, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">RIC (6M)</label>

                        <div class="checkbox" style="display: inline-block;width: 100px;">
                            @Html.EditorFor(model => model.Driver6)
                            @Html.ValidationMessageFor(model => model.Driver6, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">PER (3M)</label>

                        <div class="checkbox" style="display: inline-block;width: 100px;">
                            @Html.EditorFor(model => model.Driver7)
                            @Html.ValidationMessageFor(model => model.Driver7, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">OCO (3M)</label>

                        <div class="checkbox" style="display: inline-block;width: 100px;">
                            @Html.EditorFor(model => model.Driver8)
                            @Html.ValidationMessageFor(model => model.Driver8, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">STR (2M)</label>

                        <div class="checkbox" style="display: inline-block;width: 100px;">
                            @Html.EditorFor(model => model.Driver9)
                            @Html.ValidationMessageFor(model => model.Driver9, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">SIR (1M)</label>

                        <div class="checkbox" style="display: inline-block;width: 100px;">
                            @Html.EditorFor(model => model.Driver10)
                            @Html.ValidationMessageFor(model => model.Driver10, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">HUL (4M)</label>

                        <div class="checkbox" style="display: inline-block;width: 100px;">
                            @Html.EditorFor(model => model.Driver11)
                            @Html.ValidationMessageFor(model => model.Driver11, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">SAI (3M)</label>

                        <div class="checkbox" style="display: inline-block;width: 100px;">
                            @Html.EditorFor(model => model.Driver12)
                            @Html.ValidationMessageFor(model => model.Driver12, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">GAS (2M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver13)
                            @Html.ValidationMessageFor(model => model.Driver13, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">HAR (1M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver14)
                            @Html.ValidationMessageFor(model => model.Driver14, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">GRO (2M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver15)
                            @Html.ValidationMessageFor(model => model.Driver15, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">MAG (3M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver16)
                            @Html.ValidationMessageFor(model => model.Driver16, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">VAN (3M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver17)
                            @Html.ValidationMessageFor(model => model.Driver17, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">ALO (4M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver18)
                            @Html.ValidationMessageFor(model => model.Driver18, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">ERI (1M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver19)
                            @Html.ValidationMessageFor(model => model.Driver19, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-2" style="display: inline-block;width: 100px;">LEC (1M)</label>

                        <div class="checkbox" style="display: inline-block">
                            @Html.EditorFor(model => model.Driver20)
                            @Html.ValidationMessageFor(model => model.Driver20, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </div>
            </div>
            <div class="col col-md-4">
                <div class="jumbotron" style="height: 200px;">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <h2>Finish position Max</h2>
                            <select>
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6</option>
                                <option value="7">7</option>
                                <option value="8">8</option>
                                <option value="9">9</option>
                                <option value="10">10</option>
                                <option value="11">11</option>
                                <option value="12">12</option>
                                <option value="13">13</option>
                                <option value="14">14</option>
                                <option value="15">15</option>
                                <option value="16">16</option>
                                <option value="17">17</option>
                                <option value="18">18</option>
                                <option value="19">19</option>
                                <option value="20">20</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col col-md-12">
                <div class="jumbotron" style="height: 200px;">
                    <div class="form-group">
                        
                            <h1 align="center">Commit guess</h1>
                            <div align="center">
                                <input type="submit" value="Make guess!" class="btn btn-success btn-lg"  />
                            </div>
                       
                    </div>
                </div>
            </div>
        </div>
</div>
    
    

}
<script>
    

   /* $("#Driver1").click(function () {

        if ($(this).prop("checked")) {
            $("#Cash").val($("#Cash").val() + 200);
        }
        else {
            $("#Cash").val($("#Cash").val() - 200);
        }
    });*/

   $("#Driver1").click(function () {
        
       if ($(this).prop("checked")) {
           $('#Cash').html(function (i, val) { return val * 1 + 7000000 });
           $('#Driver2').attr("disabled", true);
       }
       else {
           $('#Cash').html(function (i, val) { return val * 1 - 7000000 });
           $('#Driver2').removeAttr("disabled");
       }
    });
   $("#Driver2").click(function () {
        
       if ($(this).prop("checked")) {
           $('#Cash').html(function (i, val) { return val * 1 + 6000000 });
           $('#Driver1').attr("disabled", true);
       }
       else {
           $('#Cash').html(function (i, val) { return val * 1 - 6000000 });
           $('#Driver1').removeAttr("disabled");
       }
    });
   $("#Driver3").click(function () {
        
       if ($(this).prop("checked")) {
           $('#Cash').html(function (i, val) { return val * 1 + 7000000 });
           $('#Driver4').attr("disabled", true);
       }
       else {
           $('#Cash').html(function (i, val) { return val * 1 - 7000000 });
           $('#Driver4').removeAttr("disabled");
       }
    });
   $("#Driver4").click(function () {
        
       if ($(this).prop("checked")) {
           $('#Cash').html(function (i, val) { return val * 1 + 6000000 });
           $('#Driver3').attr("disabled", true);
       }
       else {
           $('#Cash').html(function (i, val) { return val * 1 - 6000000 });
           $('#Driver3').removeAttr("disabled");
       }
    });
   $("#Driver5").click(function () {
        
       if ($(this).prop("checked")) {
           $('#Cash').html(function (i, val) { return val * 1 + 6000000 });
           $('#Driver6').attr("disabled", true);
       }
       else {
           $('#Cash').html(function (i, val) { return val * 1 - 6000000 });
           $('#Driver6').removeAttr("disabled");
       }
    });
    $("#Driver6").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 6000000 });
            $('#Driver5').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 6000000 });
            $('#Driver5').removeAttr("disabled");
        }
    });
   $("#Driver7").click(function () {
        
       if ($(this).prop("checked")) {
           $('#Cash').html(function (i, val) { return val * 1 + 3000000 });
           $('#Driver8').attr("disabled", true);
       }
       else {
           $('#Cash').html(function (i, val) { return val * 1 - 3000000 });
           $('#Driver8').removeAttr("disabled");
       }
    });
    $("#Driver8").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 3000000 });
            $('#Driver7').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 3000000 });
            $('#Driver7').removeAttr("disabled");
        }
    });
    $("#Driver9").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 2000000 });
            $('#Driver10').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 2000000 });
            $('#Driver10').removeAttr("disabled");
        }
    });
    $("#Driver10").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 1000000 });
            $('#Driver9').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 1000000 });
            $('#Driver9').removeAttr("disabled");
        }
    });
    $("#Driver11").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 4000000 });
            $('#Driver12').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 4000000 });
            $('#Driver12').removeAttr("disabled");
        }
    });
    $("#Driver12").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 3000000 });
            $('#Driver11').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 3000000 });
            $('#Driver11').removeAttr("disabled");
        }
    });
    $("#Driver13").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 2000000 });
            $('#Driver14').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 2000000 });
            $('#Driver14').removeAttr("disabled");
        }
    });
    $("#Driver14").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 1000000 });
            $('#Driver13').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 1000000 });
            $('#Driver13').removeAttr("disabled");
        }
    });
    $("#Driver15").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 2000000 });
            $('#Driver16').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 2000000 });
            $('#Driver16').removeAttr("disabled");
        }
    });
    $("#Driver16").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 3000000 });
            $('#Driver15').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 3000000 });
            $('#Driver15').removeAttr("disabled");
        }
    });
    $("#Driver17").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 3000000 });
            $('#Driver18').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 3000000 });
            $('#Driver18').removeAttr("disabled");
        }
    });
    $("#Driver18").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 4000000 });
            $('#Driver17').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 4000000 });
            $('#Driver17').removeAttr("disabled");
        }
    });
    $("#Driver19").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 1000000 });
            $('#Driver20').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 1000000 });
            $('#Driver20').removeAttr("disabled");
        }
    });
    $("#Driver20").click(function () {

        if ($(this).prop("checked")) {
            $('#Cash').html(function (i, val) { return val * 1 + 1000000 });
            $('#Driver19').attr("disabled", true);
        }
        else {
            $('#Cash').html(function (i, val) { return val * 1 - 1000000 });
            $('#Driver19').removeAttr("disabled");
        }
    });


</script>