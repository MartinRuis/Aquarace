@using AquaraceV2.Models
@model AquaraceV2.Models.Group

@{
    ViewBag.Title = "GroupDetails";
    ViewBag.PlayerCount = 0;
}
<head>
<style>
    .wokkelszijnlekker {
        text-decoration: none;
        color: #ffffff;
    }
    .wokkelszijnlekker:hover {
        color: #F9F9F9;
        text-decoration: none;
        cursor: pointer;
    }


</style>

</head>


<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            @Html.ActionLink("Aquarace", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })

        </div>
        <ul class="nav navbar-nav navbar-right">
            <li><a href="#"><span class="glyphicon glyphicon-user"></span> Welcome @HttpContext.Current.Session["UserName"].ToString()</a></li>
            <li>@Html.ActionLink("Logout", "Login", "Player")</li>
        </ul>
    </div>
</div>
<br/>
<div class="container">
    <div class="row">
        <div class="col col-md-6">
            <div class="jumbotron">
                <h2>Group: @Html.DisplayFor(model => model.Title)</h2>

                @if (!Model.IsPrivate)
                {
                    <p style="color: #ff0000; font-weight: bold">group is private</p>
                }
                <p>is group private? @Html.DisplayFor(model => model.IsPrivate)</p>
                <div class="card">
                    <div class="card-body">
                        <ul class="list-group list-group-flush">
                            @foreach (Player player in Model.GetPlayers())
                            {
                                <li class="list-group-item">Player @ViewBag.PlayerCount : @player.UserName</li>
                                ViewBag.PlayerCount++;
                            }
                            @for (int i = Model.GetPlayers().Count; i <= Model.GetMaxPlayers() - 1; i++)
                            {
                                <li class="list-group-item">Empty</li>
                            }
                        </ul>
                    </div>
                </div>
                <p class="btn btn-success btn-xs"> <span class="glyphicon glyphicon-plus"></span> @Html.ActionLink("Back", "Index", "Home")</p>
            </div>
        </div>
    </div>
        <dd>
            @Html.DisplayFor(model => model.IsPrivate)
        </dd>
        @for (int i = 0; i < Model.GetMaxPlayers(); i++)
        {
            try
            {
                <p>@Model.GetPlayers()[i].UserName</p>
            }
            catch (Exception ex)
            {
                int BetterI = i + 1;
                <p>empty user @BetterI</p>

                @{int playercount = 0;}

                <div class="card">
                    <div class="card-body">
                        <ul class="list-group list-group-flush">

                            @foreach (Player player in Model.GetPlayers())
                            {
                                playercount++;
                                <li class="list-group-item">Player @playercount: @player.UserName</li>

                            }
                            @for (int i = Model.GetPlayers().Count + 1; i <= Model.GetMaxPlayers(); i++)
                            {
                                playercount++;
                                <li class="list-group-item">Player @playercount: empty</li>
                            }
                        </ul>
                    </div>
                </div>
                <p class="btn btn-success btn-xs"> <span class="glyphicon glyphicon-plus"></span> @Html.ActionLink("Back", "Index", "Home")</p>
            </div>
        </div>
    </div>

    </dl>

</div>
